{"ast":null,"code":"var _jsxFileName = \"/Users/phillipdang/Desktop/INFO441-GroupFormationProject/react-client/src/component/CreateProject.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../index.css\";\nimport { getDatabase, ref, push } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CreateProject(props) {\n  _s();\n  const {\n    refreshList = () => {}\n  } = props;\n  const [projectName, setProjectName] = useState(\"\");\n  const [starter, setStarter] = useState(\"\");\n  const [members, setMembers] = useState([\"\", \"\", \"\"]);\n  const [projectDetail, setProjectDetail] = useState(\"\");\n  const [submitStatus, setSubmitStatus] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleMemberChange = (index, value) => {\n    const newMembers = [...members];\n    newMembers[index] = value;\n    setMembers(newMembers);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!projectName || !starter || !projectDetail) {\n      setErrorMessage(\"Please fill out required fields *\");\n      setSubmitStatus(null);\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n      return;\n    }\n    const filteredMembers = members.filter(member => member.trim() !== \"\");\n    const totalMembers = filteredMembers.length + 1; // Includes starter\n    const maxMembers = 4;\n    const newProject = {\n      projectName,\n      starter,\n      members: filteredMembers,\n      projectDetail,\n      count: `${totalMembers} / ${maxMembers}`,\n      request: []\n    };\n    try {\n      // const db = getDatabase();\n      // const projectRef = ref(db, \"Projects\");\n      // await push(projectRef, newProject);\n      // console.log(\"Project added to Firebase\");\n      const res = await fetch('/profile/posterName', {\n        method: 'GET',\n        credentials: 'include' //\n      });\n      const {\n        username\n      } = await res.json();\n      await fetch(\"projects/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          projectName: projectName,\n          projectDescription: projectDetail,\n          projectMembers: members,\n          projectStarter: username !== null && username !== void 0 ? username : ''\n        })\n      });\n      await refreshList();\n      setProjectName('');\n      setStarter('');\n      setMembers([\"\", \"\", \"\"]);\n      setProjectDetail('');\n      setSubmitStatus(\"success\");\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Error submitting data: \", error);\n      setSubmitStatus(\"error\");\n      setErrorMessage(\"Error submitting data, please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [submitStatus === \"success\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert_success\",\n        children: \"Data submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), (submitStatus === \"error\" || errorMessage) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert_message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Project Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: projectName,\n        onChange: e => setProjectName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Starter \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: starter,\n        onChange: e => setStarter(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Members (Up to 3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), members.map((member, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Member ${index + 1}`,\n        value: member,\n        onChange: e => handleMemberChange(index, e.target.value)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Project Detail \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: projectDetail,\n        onChange: e => setProjectDetail(e.target.value),\n        rows: \"4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateProject, \"L23paha8tgZ/skXISrOIDYt3pp4=\");\n_c = CreateProject;\nvar _c;\n$RefreshReg$(_c, \"CreateProject\");","map":{"version":3,"names":["React","useState","getDatabase","ref","push","jsxDEV","_jsxDEV","CreateProject","props","_s","refreshList","projectName","setProjectName","starter","setStarter","members","setMembers","projectDetail","setProjectDetail","submitStatus","setSubmitStatus","errorMessage","setErrorMessage","handleMemberChange","index","value","newMembers","handleSubmit","event","preventDefault","window","scrollTo","top","behavior","filteredMembers","filter","member","trim","totalMembers","length","maxMembers","newProject","count","request","res","fetch","method","credentials","username","json","headers","body","JSON","stringify","projectDescription","projectMembers","projectStarter","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","onChange","e","target","required","map","placeholder","rows","onClick","_c","$RefreshReg$"],"sources":["/Users/phillipdang/Desktop/INFO441-GroupFormationProject/react-client/src/component/CreateProject.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../index.css\";\nimport { getDatabase, ref, push } from \"firebase/database\";\n\nexport function CreateProject(props) {\n    const { refreshList = () => { } } = props;\n    const [projectName, setProjectName] = useState(\"\");\n    const [starter, setStarter] = useState(\"\");\n    const [members, setMembers] = useState([\"\", \"\", \"\"]);\n    const [projectDetail, setProjectDetail] = useState(\"\");\n    const [submitStatus, setSubmitStatus] = useState(null);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleMemberChange = (index, value) => {\n        const newMembers = [...members];\n        newMembers[index] = value;\n        setMembers(newMembers);\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (!projectName || !starter || !projectDetail) {\n            setErrorMessage(\"Please fill out required fields *\");\n            setSubmitStatus(null);\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\n            return;\n        }\n\n        const filteredMembers = members.filter(member => member.trim() !== \"\");\n        const totalMembers = filteredMembers.length + 1; // Includes starter\n        const maxMembers = 4;\n\n        const newProject = {\n            projectName,\n            starter,\n            members: filteredMembers,\n            projectDetail,\n            count: `${totalMembers} / ${maxMembers}`,\n            request: [],\n        };\n\n        try {\n            // const db = getDatabase();\n            // const projectRef = ref(db, \"Projects\");\n            // await push(projectRef, newProject);\n            // console.log(\"Project added to Firebase\");\n            const res = await fetch('/profile/posterName', {\n                method: 'GET',              \n                credentials: 'include',     //\n            });\n            const { username } = await res.json(); \n\n\n\n            await fetch(\"projects/posts\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    projectName: projectName,\n                    projectDescription: projectDetail,\n                    projectMembers: members,\n                    projectStarter: username ?? '',\n                })\n            })\n\n            await refreshList();\n\n            setProjectName('');\n            setStarter('');\n            setMembers([\"\", \"\", \"\"]);\n            setProjectDetail('');\n            setSubmitStatus(\"success\");\n            setErrorMessage(\"\");\n\n        } catch (error) {\n            console.error(\"Error submitting data: \", error);\n            setSubmitStatus(\"error\");\n            setErrorMessage(\"Error submitting data, please try again.\");\n        }\n    };\n\n    return (\n        <div className=\"form-container\">\n            <form>\n                {submitStatus === \"success\" && (\n                    <div className=\"alert_success\">\n                        Data submitted successfully!\n                    </div>\n                )}\n\n                {(submitStatus === \"error\" || errorMessage) && (\n                    <div className=\"alert_message\">\n                        {errorMessage}\n                    </div>\n                )}\n\n                <label>Project Name <span style={{ color: \"red\" }}>*</span></label>\n                <input\n                    type=\"text\"\n                    value={projectName}\n                    onChange={(e) => setProjectName(e.target.value)}\n                    required\n                />\n\n                <label>Starter <span style={{ color: \"red\" }}>*</span></label>\n                <input\n                    type=\"text\"\n                    value={starter}\n                    onChange={(e) => setStarter(e.target.value)}\n                    required\n                />\n\n                <label>Members (Up to 3)</label>\n                {members.map((member, index) => (\n                    <input\n                        key={index}\n                        type=\"text\"\n                        placeholder={`Member ${index + 1}`}\n                        value={member}\n                        onChange={(e) => handleMemberChange(index, e.target.value)}\n                    />\n                ))}\n\n                <label>Project Detail <span style={{ color: \"red\" }}>*</span></label>\n                <textarea\n                    value={projectDetail}\n                    onChange={(e) => setProjectDetail(e.target.value)}\n                    rows=\"4\"\n                    required\n                />\n\n                <button type=\"button\" onClick={handleSubmit}>Submit</button>\n            </form>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,SAASC,WAAW,EAAEC,GAAG,EAAEC,IAAI,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjC,MAAM;IAAEC,WAAW,GAAGA,CAAA,KAAM,CAAE;EAAE,CAAC,GAAGF,KAAK;EACzC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMsB,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACzC,MAAMC,UAAU,GAAG,CAAC,GAAGX,OAAO,CAAC;IAC/BW,UAAU,CAACF,KAAK,CAAC,GAAGC,KAAK;IACzBT,UAAU,CAACU,UAAU,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAAClB,WAAW,IAAI,CAACE,OAAO,IAAI,CAACI,aAAa,EAAE;MAC5CK,eAAe,CAAC,mCAAmC,CAAC;MACpDF,eAAe,CAAC,IAAI,CAAC;MACrBU,MAAM,CAACC,QAAQ,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;MAC/C;IACJ;IAEA,MAAMC,eAAe,GAAGnB,OAAO,CAACoB,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IACtE,MAAMC,YAAY,GAAGJ,eAAe,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC;IACjD,MAAMC,UAAU,GAAG,CAAC;IAEpB,MAAMC,UAAU,GAAG;MACf9B,WAAW;MACXE,OAAO;MACPE,OAAO,EAAEmB,eAAe;MACxBjB,aAAa;MACbyB,KAAK,EAAE,GAAGJ,YAAY,MAAME,UAAU,EAAE;MACxCG,OAAO,EAAE;IACb,CAAC;IAED,IAAI;MACA;MACA;MACA;MACA;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qBAAqB,EAAE;QAC3CC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS,CAAM;MAChC,CAAC,CAAC;MACF,MAAM;QAAEC;MAAS,CAAC,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAIrC,MAAMJ,KAAK,CAAC,gBAAgB,EAAE;QAC1BC,MAAM,EAAE,MAAM;QACdI,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjB1C,WAAW,EAAEA,WAAW;UACxB2C,kBAAkB,EAAErC,aAAa;UACjCsC,cAAc,EAAExC,OAAO;UACvByC,cAAc,EAAER,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI;QAChC,CAAC;MACL,CAAC,CAAC;MAEF,MAAMtC,WAAW,CAAC,CAAC;MAEnBE,cAAc,CAAC,EAAE,CAAC;MAClBE,UAAU,CAAC,EAAE,CAAC;MACdE,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACxBE,gBAAgB,CAAC,EAAE,CAAC;MACpBE,eAAe,CAAC,SAAS,CAAC;MAC1BE,eAAe,CAAC,EAAE,CAAC;IAEvB,CAAC,CAAC,OAAOmC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CrC,eAAe,CAAC,OAAO,CAAC;MACxBE,eAAe,CAAC,0CAA0C,CAAC;IAC/D;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAKqD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3BtD,OAAA;MAAAsD,QAAA,GACKzC,YAAY,KAAK,SAAS,iBACvBb,OAAA;QAAKqD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAE/B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACR,EAEA,CAAC7C,YAAY,KAAK,OAAO,IAAIE,YAAY,kBACtCf,OAAA;QAAKqD,SAAS,EAAC,eAAe;QAAAC,QAAA,EACzBvC;MAAY;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CACR,eAED1D,OAAA;QAAAsD,QAAA,GAAO,eAAa,eAAAtD,OAAA;UAAM2D,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAN,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnE1D,OAAA;QACI6D,IAAI,EAAC,MAAM;QACX1C,KAAK,EAAEd,WAAY;QACnByD,QAAQ,EAAGC,CAAC,IAAKzD,cAAc,CAACyD,CAAC,CAACC,MAAM,CAAC7C,KAAK,CAAE;QAChD8C,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAEF1D,OAAA;QAAAsD,QAAA,GAAO,UAAQ,eAAAtD,OAAA;UAAM2D,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAN,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9D1D,OAAA;QACI6D,IAAI,EAAC,MAAM;QACX1C,KAAK,EAAEZ,OAAQ;QACfuD,QAAQ,EAAGC,CAAC,IAAKvD,UAAU,CAACuD,CAAC,CAACC,MAAM,CAAC7C,KAAK,CAAE;QAC5C8C,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAEF1D,OAAA;QAAAsD,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAC/BjD,OAAO,CAACyD,GAAG,CAAC,CAACpC,MAAM,EAAEZ,KAAK,kBACvBlB,OAAA;QAEI6D,IAAI,EAAC,MAAM;QACXM,WAAW,EAAE,UAAUjD,KAAK,GAAG,CAAC,EAAG;QACnCC,KAAK,EAAEW,MAAO;QACdgC,QAAQ,EAAGC,CAAC,IAAK9C,kBAAkB,CAACC,KAAK,EAAE6C,CAAC,CAACC,MAAM,CAAC7C,KAAK;MAAE,GAJtDD,KAAK;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACJ,CAAC,eAEF1D,OAAA;QAAAsD,QAAA,GAAO,iBAAe,eAAAtD,OAAA;UAAM2D,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAAN,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrE1D,OAAA;QACImB,KAAK,EAAER,aAAc;QACrBmD,QAAQ,EAAGC,CAAC,IAAKnD,gBAAgB,CAACmD,CAAC,CAACC,MAAM,CAAC7C,KAAK,CAAE;QAClDiD,IAAI,EAAC,GAAG;QACRH,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eAEF1D,OAAA;QAAQ6D,IAAI,EAAC,QAAQ;QAACQ,OAAO,EAAEhD,YAAa;QAAAiC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACvD,EAAA,CAnIeF,aAAa;AAAAqE,EAAA,GAAbrE,aAAa;AAAA,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}